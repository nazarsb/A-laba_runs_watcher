from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.text import Const, Format, Case, Multi
from aiogram_dialog.widgets.kbd import (Button, Calendar, Back)
from aiogram_dialog.widgets.input import TextInput

from bot.dialogs.electro_dialog.handlers import (click_on_start_date, click_on_end_date, 
                                                 command_start_process, complete_new_event_plan, 
                                                 click_on_time1, check_time, error_time_handler, success_time1_handler,
                                                 success_time2_handler, go_summary)
from bot.dialogs.electro_dialog.states import ElectroSG
from bot.dialogs.electro_dialog.getters import get_event_dates_time




electro_dialog = Dialog(
    Window(
        Const('‚è≥ –í –∫–∞–∫–æ–π –¥–µ–Ω—å <b>–Ω–∞—á–∞–ª–æ</b> –æ—Ç–∫–ª—é—á–µ–Ω–∏—è?'),
        Calendar(id='date1', on_click=click_on_start_date),
        Button(Const('–ù–∞–∑–∞–¥'), id='back1', on_click=command_start_process),
        state=ElectroSG.event_start_date
    ),

    Window(
        Format('‚è≥ <b>–ù–∞—á–∞–ª–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è</b>: {event_start_date}'),
        Const('‚åõÔ∏è –ê –≤ –∫–∞–∫–æ–π <b>–í–ï–†–ù–£–¢</b> —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ?'),
        Calendar(id='date2', on_click=click_on_end_date),
        Back(Const('–ù–∞–∑–∞–¥'), id='back2'),
        state=ElectroSG.event_end_date,
    ),

    Window(
        Format('üóì –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –≤ –¥–Ω–∏: \n<b>{event_start_date} - {event_end_date}</b>'),
        Const('<i>–•–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è?</i>'),
        Button(Const('–î–∞'), id='time1', on_click=click_on_time1),
        Button(Const('–ù–µ—Ç'), id='time2', on_click=go_summary),
        Back(Const('–ù–∞–∑–∞–¥'), id='back3'),
        state=ElectroSG.event_time,
    ),

    Window(
        Format('üóì –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –≤ –¥–Ω–∏: <b>{event_start_date} - {event_end_date}</b>'),
        Const('–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è <b>–ù–ê–ß–ê–õ–ê</b> –æ—Ç–∫–ª—é—á–µ–Ω–∏—è'),
        Const('<b><i>–§–æ—Ä–º–∞—Ç - –ß–ß:–ú–ú</i></b>'),
        TextInput(id='time1',
                  type_factory=check_time,
                  on_success=success_time1_handler,
                  on_error=error_time_handler),
        Back(Const('–ù–∞–∑–∞–¥'), id='back4'),
        state=ElectroSG.event_start_time,
    ),

    Window(
        Format('üóì –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –≤ –¥–Ω–∏: <b>{event_start_date} - {event_end_date}</b>'),
        Format('–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è: <b>{time1}</b>'),
        Const('–í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è <b>–û–ö–û–ù–ß–ê–ù–ò–Ø</b> –æ—Ç–∫–ª—é—á–µ–Ω–∏—è?'),
        Const('<b><i>–§–æ—Ä–º–∞—Ç - –ß–ß:–ú–ú</i></b>'),
        TextInput(id='time2',
                  type_factory=check_time,
                  on_success=success_time2_handler,
                  on_error=error_time_handler),
        Back(Const('–ù–∞–∑–∞–¥'), id='back5'),
        state=ElectroSG.event_end_time,
    ),

    Window(
        Const('üìù –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è'),
        Const('–ï—Å–ª–∏ –≤—Å–µ <b>–û–ö</b>, –∂–º–∏—Ç–µ <b>"–î–∞"</b>.\n'),
        Format('<b>–¢–∏–ø —Å–æ–±—ã—Ç–∏—è:</b> {event_type}\n'),
        Case(
            texts={
                True : Multi(
                    Format('<b>–ù–∞—á–∞–ª–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è:</b> {event_start_date} –≤ {time1}'),
                    Format('<b>–ö–æ–Ω–µ—Ü –æ—Ç–∫–ª—é—á–µ–Ω–∏—è:</b> {event_end_date} –≤ {time2}'),
                ),
                False: Multi(
                    Format('<b>–ù–∞—á–∞–ª–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è:</b> {event_start_date}'),
                    Format('<b>–ö–æ–Ω–µ—Ü –æ—Ç–∫–ª—é—á–µ–Ω–∏—è:</b> {event_end_date}'),
                ),
            },
            selector='is_there_time',
        ),
        Const('\n–í—Å–µ –≤–µ—Ä–Ω–æ?'),
        Button(Const('–î–∞'), id='complete', on_click=complete_new_event_plan),
        Back(Const('–ù–∞–∑–∞–¥'), id='back6'),
        state=ElectroSG.summary
    ),
    getter=get_event_dates_time
)
