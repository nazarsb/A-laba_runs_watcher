from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.text import Const, Format, Case
from aiogram_dialog.widgets.kbd import Button, Select, Calendar, Column, Group 
from aiogram_dialog.widgets.input import TextInput

from bot.dialogs.new_run_dialog.getters import getter_instruments, getter_reagents, getter_summary
from bot.dialogs.new_run_dialog.states import RunSG   
from bot.dialogs.new_run_dialog.handlers import (instrument_selection, click_on_date, reagent_selection, 
                                        complete_new_run_plan, go_back, command_start_process, success_qitantime_handler, 
                                        error_qitantime_handler, check_duration, switch_to_rundate, switch_to_duration_or_reagent)



new_run_dialog = Dialog(
    Window(
        Const('–ù–∞ –∫–∞–∫–æ–º <b>–ø—Ä–∏–±–æ—Ä–µ</b> –∑–∞–ø—É—Å–∫–∞–µ–º—Å—è?'),
        Column(
        Select(
            Format('{item[0]}'),
            id='instr',
            item_id_getter=lambda x: x[1],
            items='instruments',
            on_click=instrument_selection,
        )),
        Button(Const('–ù–∞–∑–∞–¥'), id='back0', on_click=command_start_process),
        getter=getter_instruments,
        state=RunSG.new_run
    ),
    Window(
        Const('–î–∞—Ç–∞ <b>–ù–ê–ß–ê–õ–ê</b> –∑–∞–ø—É—Å–∫–∞'),
        Calendar(id='date', on_click=click_on_date),
        Button(Const('–ù–∞–∑–∞–¥'), id='back1', on_click=go_back),
        state=RunSG.run_date
    ),
    Window(
        Const('–ö–∞–∫–æ–∏ÃÜ <b>–Ω–∞–±–æ—Ä</b> –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å? \n\n<i>–Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ —ç—Ç–æ–≥–æ –±–æ—Ç —Å–∞–º –ø–æ—Å—á–∏—Ç–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ ü§ì</i>'),
        Group(
        Column(
            Select(
                Format('{item[0]}'),
                id='reagent',
                item_id_getter=lambda x: x[1],
                items='reagents',
                on_click=reagent_selection,
            )),
            width=3
        ),
            Button(Const('–ù–∞–∑–∞–¥'), id='back2', on_click=go_back),
        
            getter=getter_reagents,
            state=RunSG.reagent_kit
    ),
    Window(
        Const('–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ <u><b>–≤ —á–∞—Å–∞—Ö</b></u>.'),
        TextInput(
            id='run_duration',
            type_factory=check_duration,
            on_success=success_qitantime_handler,
            on_error=error_qitantime_handler
        ),
        Button(Const('–ù–∞–∑–∞–¥'), id='to_run_date', on_click=switch_to_rundate),
        state=RunSG.run_duration
    ),  
    Window(
        Const('üìù –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è'),
        Const('–ï—Å–ª–∏ –≤—Å–µ <b>–û–ö</b>, –∂–º–∏—Ç–µ <b>"–ó–∞–≤–µ—Ä—à–∏—Ç—å"</b>.\n'),
        Format('<b>–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ:</b> {event_type}'),
        Format('<b>–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:</b> {summary[instrument]}'),
        Format('<b>–î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞:</b> {summary[run_start_date]}'),
        Case(
            texts={
                True: Format('<b>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞:</b> {summary[qitan_time]} —á.'),
                False: Format('<b>–†–µ–∞–≥–µ–Ω—Ç:</b> {summary[reagent]}'),
            },
            selector='is_qitan'
        ),
        Button(Const('–ó–∞–≤–µ—Ä—à–∏—Ç—å'), id='complete', on_click=complete_new_run_plan),
        Button(Const('–ù–∞–∑–∞–¥'), id='either_duration_or_reagent', on_click=switch_to_duration_or_reagent),
        getter=getter_summary,
        state=RunSG.summary
    ),
)
