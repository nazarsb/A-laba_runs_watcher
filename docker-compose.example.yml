services:
  postgres:
    container_name: postgres
    env_file: .env
    image: postgres:15-alpine
    restart: ${DOCKER_RESTART_POLICY}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - "postgres_volume:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - custom-network
    profiles:
      - dev
      - prod

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: ${DOCKER_RESTART_POLICY}
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_HOST}:${PGADMIN_PORT}:80"
    volumes:
      - "pgadmin_volume:/var/lib/pgadmin"
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"
    networks:
      - custom-network
    profiles:
      - dev
      - prod

  redis:
    image: "redis:7"
    container_name: redis
    restart: ${DOCKER_RESTART_POLICY}
    env_file:
      - .env
    volumes:
      - "${REDIS_CONF}:/usr/local/etc/redis/redis.conf"
      - "${REDIS_DATA}:/data"
    command: "redis-server /usr/local/etc/redis/redis.conf"
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
    networks:
      - custom_network
    profiles:
      - dev
      - prod


  db_migrations_dev:
    container_name: db_migrations
    env_file: .env
    build: .
    image: my_bot
    restart: no
    command: ["alembic", "upgrade", "head"]
    depends_on:             
      postgres:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - custom_network
    profiles:
      - dev

  db_migrations_prod:
    container_name: db_migrations
    env_file: .env
    image: my_bot
    restart: no
    command: ["alembic", "upgrade", "head"]
    depends_on:             
      postgres:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - custom_network
    profiles:
      - prod

  bot:
    container_name: bot
    env_file: .env
    image: my_bot
    restart: ${DOCKER_RESTART_POLICY}
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: ["python", "main.py"]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - custom_network
    profiles:
      - dev
      - prod


volumes:
  postgres_volume:
  pgadmin_volume:

networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.32.1.0/24  # Явно указываем новую подсеть